#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
Package = br.com.nemeth.gals
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
Parser = SLR
#RegularDefinitions
V : [a-zA-Z_][a-zA-Z_0-9áàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ]*
N : [0-9]
D : [,\.]*
CM : [/][/].*
CMS : /\*([^\*]|[\*]+[^\*/])*\*+/
STR : \"([^\"])*\"
CHARC : ['].?[']
floats : [0-9]+\.[0-9]+
BIN : 0b[0-1]+
HEXA : 0x[0-9A-F]+
bool : (true|false)

#Tokens
//captura variavel
ID : {V}+
DIG : {D}+
NUM :{N}+
V_REAL : {floats}
BINARIO : {BIN}
HEXADECIMAL : {HEXA}
:! [\s\n\t\r]

//identificadores ID palavras reservadas
PROGRAMA = ID : "programa"
INICIO = ID : "inicio"
LEIA = ID : "leia"
ESCREVA = ID : "escreva"
FUNCAO = ID : "funcao"
FIM = ID : "fim"
INCLUA = ID : "inclua"
BIBLIOTECA = ID : "biblioteca"
CONSTANTE = ID : "const"
RETORNE = ID : "retorne"
LIMPA = ID : "limpa"
PARE = ID : "pare"


//desvios condicionais
ESCOLHA = ID : "escolha"
CASO = ID : "caso"
CONTRARIO = ID : "contrario"
SE = ID : "se"
SENAO = ID : "senao"

//laços de repetição
ENQUANTO = ID : "enquanto"
FACA = ID : "faca"
PARA = ID : "para"

//identificadores ID tipos variavel
CHAR = ID : "caracter"
INT = ID : "inteiro"
FLOAT = ID : "real"
CADEIA = ID : "cadeia"
LOGICO = ID : "logico"
BOOL : {bool}
//identificadores Dig
VIRGULA = DIG : ","
PONTO = DIG : "."

//identificadores cadeia e caracter

STRING :{STR}
CHARACTER : {CHARC} 

//operadores
";"
"~"
"++"
"--"
"+="
"-="
"*="
"/="
"inicio"
OP_SOMA_CONC : "+" // operações de soma e concatenação de strings
OP_SUB : "-"
OP_MULT : "*"
OP_DIV : "/"
OP_MOD : "%"
ATRIBUICAO : "="
PONTERIO : "-->"
MAIOR_QUE : ">"
MENOR_IGUAL_QUE : "<="
MAIOR_IGUAL_QUE : ">="
MENOR_QUE : "<"
BITWISE_XOR : "^"
BIT_L : "<<"
BIT_R : ">>"
PIPE : "|"
OU = ID : "ou"
E = ID : "e"
BIT_E : "&"
NOT : "!"
DIFERENTE : "!="
IGUAL : "=="
DOISPONTOS : ":"
CONTRABARRA : "\"
ASPAAS : "'"



//seccessores
PLD : ")"
PLE : "("
COLD : "]"
COLE : "["
CHLD : "}"
CHLE : "{"
EOD : ";"

//comentarios
:! {CM}
:! {CMS}

//CONSTANTESASPAS : {CONST}
#NonTerminals
<prog>
<biblioteca>
<importacao>
<funcoes>
<funcao>
<begin>
<funcao_inicio>
<parametros>
<id_func>
<corpo>
<corpo_com_retorno>
<cmd>
<if>
<else>
<while>
<case>
<para>
<variavel>
<tipo>
<lista_id>
<atribuicao>
<atribuicoes>
<atribuicao_direta>
<exp>
<exp1>
<exp2>
<exp3>
<exp4>
<exp5>
<exp6>
<exp7>
<exp8>
<exp9>
<exp10>
<saida>
<op_rel>
<op_neg>
<op_bitwise>
<op_arit_baixa>
<op_arit_alta>
<op_arit_mais_alta>
<ids>
<vetor>
<cham_func>

#Grammar
<prog> ::= PROGRAMA CHLE#0 <biblioteca> <funcoes> CHLD |  PROGRAMA CHLE#0 <funcoes> CHLD;

<biblioteca> ::= <importacao> <biblioteca> | <importacao>;

<importacao> ::= INCLUA BIBLIOTECA ID#4 PONTERIO ID#4 |  INCLUA BIBLIOTECA ID#4 ;

<funcoes> ::= <funcao> <funcoes> | <begin>;

<funcao>::= FUNCAO ID#5 PLE PLD CHLE#0 <corpo> CHLD#101 | FUNCAO ID#5 PLE PLD CHLE#0 CHLD#101 |
             FUNCAO ID#5 PLE <parametros> PLD#98 CHLE#0 <corpo> CHLD#101 | FUNCAO  ID#5 PLE <parametros> PLD#98 CHLE#0 CHLD#101 | 
	    FUNCAO  <tipo>#1 ID#5 PLE <parametros> PLD#98 CHLE#0 <corpo_com_retorno> CHLD#101 |FUNCAO  <tipo>#1 ID#5 PLE PLD CHLE#0 <corpo_com_retorno> CHLD#101 ;

<begin>::=  FUNCAO INICIO#35 PLE PLD CHLE#0 <corpo> CHLD#101 | FUNCAO INICIO#35 PLE PLD CHLE#0 CHLD#102;

<parametros>::= <tipo>#1 <id_func> VIRGULA <parametros> | <tipo>#1 <id_func>#97;

<id_func> ::= ID#2 | <vetor> #99;

<corpo> ::= <cmd><corpo> | <cmd> ;

<corpo_com_retorno>::= <cmd><corpo_com_retorno> | <cmd> RETORNE <exp>#100 | RETORNE <exp>#100  ;

<cmd> ::= <variavel> |<atribuicao> | ESCREVA PLE <exp> PLD | LEIA PLE ID#7#35 PLD | LEIA PLE <vetor> PLD |<if>  |<while>|
	  ESCOLHA PLE ID#14 PLD CHLE#0 <case> CONTRARIO DOISPONTOS <corpo> CHLD#101 | <cham_func> | <para>; 

<if>::= SE PLE <exp> PLD CHLE#0#48 <corpo> CHLD#101#49 | SE PLE <exp> PLD CHLE#0#48 <corpo> CHLD#101#50 <else> ;
<else>::= SENAO CHLE#0 <corpo> CHLD#101#51;

<while>::=  ENQUANTO#52 PLE <exp> PLD CHLE#0#48 <corpo> CHLD#101#53 | FACA CHLE#0#54 <corpo> CHLD#101 ENQUANTO PLE <exp> PLD#55 ;

<case> ::= CASO DOISPONTOS <corpo> FIM <case> | CASO DOISPONTOS <corpo> FIM ;

<para> ::= PARA PLE <atribuicao> ";" <exp> ";" <atribuicao> PLD CHLE <corpo> CHLD ;	  

<variavel> ::= <tipo>#1 <lista_id> |<tipo>#1 <atribuicao_direta>  ;

<tipo> ::= INT | CHAR | FLOAT | CADEIA | LOGICO;

<lista_id> ::=ID#3 VIRGULA <lista_id> | ID#3  | ID#11 COLE NUM#34 COLD  ;

<atribuicao> ::=  <atribuicao_direta> | ID#13"++" | ID#13"--" | ID#13 <atribuicoes> <exp>#100 | <vetor>#13 <atribuicoes> <exp>#100 |<vetor> ATRIBUICAO <exp>#100;

<atribuicoes> ::= "+=" | "-=" | "*=" | "/=";

<atribuicao_direta> ::= ID#7#12 ATRIBUICAO <exp>#100#40 ;

<exp>  ::= <exp> OU#15 <exp1> | <exp1>;
<exp1> ::= <exp1> E#16 <exp2> | <exp2>;
<exp2> ::= <exp2> PIPE#17 <exp3> | <exp3>;
<exp3> ::= <exp3> BITWISE_XOR#18 <exp4> | <exp4>;
<exp4> ::= <exp4> BIT_E#19 <exp5> | <exp5>;
<exp5> ::= <exp5> <op_rel>#20#39 <exp6>#47 | <exp6>;
<exp6> ::= <exp6> <op_bitwise>#21 <exp7> | <exp7>;
<exp7> ::= <exp7> <op_arit_baixa>#22 <exp8> | <exp8>;
<exp8> ::= <exp8> <op_arit_alta>#23 <exp9> | <exp9> ;
<exp9> ::= <op_neg>#24 <exp10> | <exp10>;
<exp10> ::= <saida> | PLE#32 <exp>#100 PLD#33 ;
<saida> ::= NUM#25#38 | V_REAL#26 | ID#6#37 | CHARACTER#27 | STRING#28 | <vetor>#31 | BOOL#29 | <cham_func>#30;
<op_rel> ::= MAIOR_QUE | MENOR_QUE | MAIOR_IGUAL_QUE | MENOR_IGUAL_QUE | IGUAL | DIFERENTE; 
<op_neg> ::= OP_SUB | "~" | NOT;
<op_bitwise> ::= BIT_L | BIT_R;
<op_arit_baixa> ::= OP_SOMA_CONC#36 | OP_SUB#36;
<op_arit_alta> ::= OP_MULT | OP_DIV| OP_MOD;
<cham_func> ::= ID#8 PLE <ids> PLD#96 | ID#8 PLE PLD#96;
<ids> ::= <ids> VIRGULA ID#9 | ID#9 ;
<vetor> ::= ID#10 COLE NUM COLD ;
